name: CD - Hybrid Deployment (Analytics Project)

on:
  workflow_run:
    workflows: [Setup Infra and Deploy GitHub Runner]
    types:
      - completed
  workflow_dispatch:   # one-click manual deploy
  # one-click manual deploy

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # ======================
      # Checkout infra repo (this one)
      # ======================
      - name: Checkout infra
        uses: actions/checkout@v4



      # ======================
      # Checkout each microservice repo
      # ======================
      - name: Checkout User Auth Service
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/user-auth-service
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: user-auth-service

      - name: Checkout Data Upload Service
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/data-upload-service
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: data-upload-service

      - name: Checkout Analytics Service
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/analytics-service
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: analytics-service

      - name: Checkout Frontend
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/frontend
          token: ${{ secrets.GH_PAT }}
          ref: main
          path: frontend

      # ======================
      # Collect all manifests
      # ======================
      - name: Collect manifests
        run: |
          mkdir all-k8s
          cp -r user-auth-service/k8s/* all-k8s/ || true
          cp -r data-upload-service/k8s/* all-k8s/ || true
          cp -r analytics-service/k8s/* all-k8s/ || true
          cp -r frontend/k8s/* all-k8s/ || true

      # ======================
      # Install Helm
      # ======================
      - name: Install Helm
        run: |
          sudo -u ubuntu curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          sudo -u ubuntu helm version

      # ======================
      # Install Prometheus + Grafana via Helm
      # ======================
      - name: Install monitoring stack
        run: |
          sudo -u ubuntu helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          sudo -u ubuntu helm repo update
          sudo -u ubuntu helm upgrade --install monitoring prometheus-community/kube-prometheus-stack \
            --namespace monitoring --create-namespace \
            --set grafana.service.type=NodePort \
            --set grafana.service.nodePort=32000
      
      - name: Create analytics namespace
        run: |
          sudo -u ubuntu kubectl create namespace analytics --dry-run=client -o yaml | kubectl apply -f -

      # ======================
      # Apply all manifests
      # ======================
      - name: Apply Kubernetes manifests
        run: sudo -u ubuntu kubectl apply -R -f all-k8s/ -n analytics

      - name: Wait for resources to appear
        run: sleep 20

      # ======================
      # Verify rollouts
      # ======================
      - name: Verify User Auth rollout
        run: sudo -u ubuntu kubectl rollout status deployment/user-auth-deployment -n analytics

      - name: Verify Data Upload rollout
        run: sudo -u ubuntu kubectl rollout status deployment/data-upload-deployment -n analytics

      - name: Verify Analytics rollout
        run: sudo -u ubuntu kubectl rollout status deployment/analytics-deployment -n analytics

      - name: Verify Frontend rollout
        run: sudo -u ubuntu kubectl rollout status deployment/frontend-deployment -n analytics
